import React from "react";
import { useSpring, animated } from "@react-spring/web";
import "../index.css";
import logoimage from "../Assets/Edu_Logo.png";

const Footer = () => {

  const animationProps = useSpring({
    opacity: 1,
    transform: "translateY(0px)",
    from: { opacity: 0, transform: "translateY(20px)" },
    config: { tension: 170, friction: 26 }
  });

  return (
    <div className="footer">
          <hr className="foot-seperator" />
      {/* Floating Box */}
      <animated.div style={animationProps} className="floating-box">
        <p className="text-lg font-medium">Letâ€™s talk about the courses</p>
        <button className="contact-btn">Contact us</button>
        </animated.div>

      {/* Footer Main Section */}
      <div className="footer-container text-center">
        <div className="footer-info">
          {/* Left Section */}
          <div className="footer-info-left">
            
            <h3><img src={logoimage} className="footer-info__logo" alt="Logo" /><span>Edu</span>Sphere</h3>
            <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Tenetur eius architecto error 
              incidunt quas est quos, suscipit iure in, doloribus autem recusandae libero nihil voluptate vel quidem modi nulla illo?
            </p>
            <div className="social-icons">
            <i class="fa-brands fa-facebook"></i>
            <i class="fa-brands fa-twitter"></i>
            <i class="fa-brands fa-instagram"></i>
            <i class="fa-brands fa-linkedin-in"></i>
            </div>
           
          </div>

           {/* <div >Logo</div> */}

          {/* Center Section */}
          <div className="footer-info-center text-center">
            <h5 className="mb-3">Quick Links</h5>
            <ul className="list-unstyled">
              <li>
                <a href="#" className="text-decoration-none">
                  Home
                </a>
              </li>
              <li>
                <a href="#" className="text-decoration-none">
                  Course
                </a>
              </li>
              <li>
                <a href="#" className="text-decoration-none">
                  About us
                </a>
              </li>
              <li>
                <a href="#" className="text-decoration-none">
                  Contact Us
                </a>
              </li>
            </ul>
          </div>


          {/* Right Section */}
          <div className="footer-info-right">
            <h5 className="footer-info__header">Contact Info</h5>
            <p className="footer-info__number"><i class="fa-solid fa-phone-volume"></i>1234567890</p>
            <p className="footer-info__email"><i class="fa-solid fa-envelope"></i>edusphere@gmail.com</p>
            <p className="footer-info__address"><i class="fa-solid fa-location-dot"></i>abcsfhj, Ontario</p>
          </div>
        </div>
      </div>

      {/* <hr className="foot-seperator" /> */}
      <div  className="footer-info__copyright">
      <p>@copyright Group4</p>
      </div>
    </div>
  );
};


mongodb+srv://AnnaAshok:Aparna%401997@cluster0.g2jmq0q.mongodb.net/edusphere?retryWrites=true&w=majority&appName=Cluster0
export default Footer;



"use client";
import React, { useState, useEffect } from "react";
import "../../profile.css";
import Header from "./Header";
import Footer from "./Footer";
import defaultUser from "../../Assets/images/user.png";
import { jwtDecode } from "jwt-decode";  // Correct import

const Profile = () => {
  const [activeTab, setActiveTab] = useState("userInfo");
  const [userImage, setUserImage] = useState(null);
  const [firstName, setFirstName] = useState("");
  const [lastName, setLastName] = useState("");
  const [email, setEmail] = useState("");
  const [phone, setPhone] = useState("");
  const [address, setAddress] = useState("");
  const [dob, setDob] = useState("");
  const [password, setPassword] = useState("");  // State for password
  const [newPassword, setNewPassword] = useState("");  // State for new password
  const [showPassword, setShowPassword] = useState(false);  // State to toggle visibility of password
  const [showNewPassword, setShowNewPassword] = useState(false);  // State to toggle visibility of new password

  // Fetch the user data from JWT token
  useEffect(() => {
    const token = localStorage.getItem("token");

    if (token) {
      const decodedToken = jwtDecode(token);  // Decode the token
      setFirstName(decodedToken.firstName);
      setLastName(decodedToken.lastName);
      setEmail(decodedToken.email);
      setPhone(decodedToken.phone || "");
      setAddress(decodedToken.address || "");
      setDob(decodedToken.dob || "");
    }
  }, []);

  const handleImageChange = (e) => {
    const file = e.target.files[0];
    if (file) {
      setUserImage(URL.createObjectURL(file));
    }
  };

  const handleUpdate = () => {
    alert("Profile updated successfully!");
  };

  // Handle password update
  const handlePasswordUpdate = () => {
    if (newPassword.length < 6) {
      alert("Password must be at least 6 characters long.");
      return;
    }
    // Call an API endpoint to update the password here
    alert("Password updated successfully!");
  };

  // Toggle password visibility
  const togglePasswordVisibility = () => {
    setShowPassword((prev) => !prev);
  };

  // Toggle new password visibility
  const toggleNewPasswordVisibility = () => {
    setShowNewPassword((prev) => !prev);
  };

  return (
    <>
      <Header />
      <div className="profile-page">
        <div className="profile-left">
          <div className="profile-image" onClick={() => document.getElementById('fileInput').click()}>
            <img src={userImage || defaultUser} alt="Profile" />
            <input type="file" id="fileInput" accept="image/*" onChange={handleImageChange} style={{ display: "none" }} />
          </div>
          <div className="profile-details">
            <h5>{firstName} {lastName}</h5>
            <h5>{email}</h5>
          </div>
        </div>

        <div className="profile-right">
          <div className="tabs">
            <button className={activeTab === "userInfo" ? "active" : ""} onClick={() => setActiveTab("userInfo")}>User Information</button>
            <button className={activeTab === "courseInfo" ? "active" : ""} onClick={() => setActiveTab("courseInfo")}>Course Information</button>
            <button className={activeTab === "passwordUpdate" ? "active" : ""} onClick={() => setActiveTab("passwordUpdate")}>Change Password</button>
          </div>

          {/* User Information Tab */}
          {activeTab === "userInfo" && (
            <div className="user-info">
              <label>First Name</label>
              <input type="text" value={firstName} onChange={(e) => setFirstName(e.target.value)} />
              
              <label>Last Name</label>
              <input type="text" value={lastName} onChange={(e) => setLastName(e.target.value)} />
              
              <label>Email</label>
              <input type="email" value={email} disabled />
              
              <label>Phone Number</label>
              <input type="text" value={phone} onChange={(e) => setPhone(e.target.value)} />
              
              <label>Address</label>
              <input type="text" value={address} onChange={(e) => setAddress(e.target.value)} />
              
              <label>Date of Birth</label>
              <input type="date" value={dob} onChange={(e) => setDob(e.target.value)} />
              
              <button className="update-button" onClick={handleUpdate}>Update</button>
            </div>
          )}

          {/* Change Password Tab */}
          {activeTab === "passwordUpdate" && (
            <div className="password-update">
              <label>Current Password</label>
              <div className="password-input-container">
                <input
                  type={showPassword ? "text" : "password"}
                  value={password}
                  onChange={(e) => setPassword(e.target.value)}
                  placeholder="Enter your current password"
                />
                <svg
                  onClick={togglePasswordVisibility}
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  strokeWidth={1.5}
                  stroke="currentColor"
                  className="icon"
                >
                  <path strokeLinecap="round" strokeLinejoin="round" d="M2.036 12.322a1.012 1.012 0 0 1 0-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178Z" />
                  <path strokeLinecap="round" strokeLinejoin="round" d="M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z" />
                </svg>
              </div>

              <label>New Password</label>
              <div className="password-input-container">
                <input
                  type={showNewPassword ? "text" : "password"}
                  value={newPassword}
                  onChange={(e) => setNewPassword(e.target.value)}
                  placeholder="Enter new password"
                />
                <svg
                  onClick={toggleNewPasswordVisibility}
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  strokeWidth={1.5}
                  stroke="currentColor"
                  className="icon"
                >
                  <path strokeLinecap="round" strokeLinejoin="round" d="M3.98 8.223A10.477 10.477 0 0 0 1.934 12C3.226 16.338 7.244 19.5 12 19.5c.993 0 1.953-.138 2.863-.395M6.228 6.228A10.451 10.451 0 0 1 12 4.5c4.756 0 8.773 3.162 10.065 7.498a10.522 10.522 0 0 1-4.293 5.774M6.228 6.228 3 3m3.228 3.228 3.65 3.65m7.894 7.894L21 21m-3.228-3.228-3.65-3.65m0 0a3 3 0 1 0-4.243-4.243m4.242 4.242L9.88 9.88" />
                </svg>
              </div>

              <button className="update-button" onClick={handlePasswordUpdate}>Update Password</button>
            </div>
          )}
          
          {/* Course Info Tab */}
          {activeTab === "courseInfo" && (
            <div className="course-info">
              <p>Course details will be displayed here.</p>
            </div>
          )}
        </div>
      </div>
      <Footer />
    </>
  );
};

export default Profile;
